(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Pacifico&family=Solway&display=swap);"]),a.push([n.id,":root {\n    font-size: 12px;\n\n    --primary-color: #334155;\n    --secondary-color: #f1f5f9;\n    --accent-color: #f87171;\n    --valid-color: #4ade80;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    font-family: 'Solway', sans-serif;\n}\n\nbody {\n    display: grid;\n    grid-template: auto 1fr / 270px 1fr;\n    min-height: 100vh;\n    background-color: var(--secondary-color);\n}\n\nbutton {\n    cursor: pointer;\n}\n\nli, i, button {\n    transition: all 0.1s ease;\n}\n\nheader {\n    grid-column: 1 / 3;\n    font-size: 2rem;\n    text-align: center;\n    border-bottom: 3px solid;\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n}\n\nheader h1 {\n    font-family: 'Pacifico', sans-serif;\n}\n\nnav {\n    padding: 2rem;\n    font-size: 1.5rem;\n    background-color: var(--primary-color);\n    border-right: 3px solid var(--secondary-color);\n    color: var(--secondary-color);\n}\n\nul {\n    list-style: none;\n}\n\nli {\n    display: flex;\n    gap: 1rem;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    user-select: none;\n}\nli:hover {\n    background-color: #f1f5f960;\n}\n\nli + li {\n    margin: 1rem 0;\n}\n\nli svg {\n    height: 1.5rem;\n    fill: var(--secondary-color);\n}\n\n.projects-nav li {\n    justify-content: space-between;\n}\n\n.project-info-div {\n    display: flex;\n    gap: 1rem;\n}\n\n.project-info-div > div {\n    max-width: 11rem;\n    overflow: hidden;\n}\n\n.delete-project {\n    all: unset;\n    color: var(--accent-color);\n}\n.delete-project:hover {\n    text-shadow: 0 0 2px;\n}\n\n.selected-project,\n.selected-project:hover,\n.new-project-button:hover {\n    background-color: var(--secondary-color);\n    color: var(--primary-color);\n}\n\nnav h3 {\n    margin: 4rem 0 1rem 0;\n}\n\n.new-project-button {\n    display: block;\n    width: 100%;\n    text-align: center;\n    border: 1px solid;\n    padding: 1rem;\n    box-sizing: border-box;\n    border-radius: 0.5rem;\n    margin-top: 2rem;\n    background-color: inherit;\n    font-size: inherit;\n    color: var(--secondary-color);\n}\n\n.project-form {\n    display: none;\n    margin-top: 2rem;\n}\n\n.project-form > input {\n    box-sizing: border-box;\n    width: 100%;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n    border: none;\n    font-size: inherit;\n    outline: none;\n}\n\n.project-form > div {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 0.5rem;\n}\n\n.project-form button {\n    width: 8rem;\n    height: 3rem;\n    font-size: inherit;\n    border-radius: 0.5rem;\n    border: none;\n    background-color: var(--valid-color);\n}\n.project-form button:last-child {\n    background-color: var(--accent-color);\n}\n.project-form button:hover {\n    filter: brightness(0.9);\n}\n\nmain {\n    font-size: 1.5rem;\n    width: 85%;\n    margin: 0 auto;\n    position: relative;\n}\n\nmain h2 {\n    height: 6rem;\n    font-size: 3rem;\n    background-color: #94a3b8;\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    box-sizing: border-box;\n    border-radius: 0.5rem;\n}\n\n.new-task-button {\n    border: 1px solid var(--primary-color);\n    padding: 1rem;\n    border-radius: 0.5rem;\n    margin-top: 3px;\n    background-color: #e2e8f0;\n    font-size: 1.5rem;\n    color: var(--primary-color);\n}\n.new-task-button:hover {\n    background-color: #cbd5e1;\n}\n\n.task-form {\n    display: flex;\n    flex-direction: column;\n    border-radius: 0.5rem;\n    padding: 2rem;\n    width: 27rem;\n    font-size: 1.5rem;\n    background-color: #e2e8f0;\n    box-shadow: 2px 2px 3px var(--primary-color)4f;\n    position: absolute;\n    top: 126px;\n    transform-origin: top left;\n    transform: scale(0);\n    opacity: 0;\n    transition: all 0.3s ease;\n}\n\n.task-form input {\n    font-size: inherit;\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    border: none;\n    outline: none;\n    margin-bottom: 1rem;\n}\n\n.priority-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 1rem;\n    gap: 1rem;\n}\n\n.priority-container input {\n    height: 1.5rem;\n    width: 1.5rem;\n    margin-bottom: unset;\n}\n\n.task-form-buttons {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.task-form-buttons button {\n    width: 9rem;\n    height: 3rem;\n    font-size: inherit;\n    border-radius: 0.5rem;\n    border: none;\n    background-color: var(--valid-color);\n}\n.task-form-buttons button:last-child {\n    background-color: var(--accent-color);\n}\n.task-form-buttons button:hover {\n    filter: brightness(0.9);\n}\n\n.tasks {\n    margin-top: 2rem;\n}\n\n.checkmark {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin-right: 0.5rem;\n    font-size: 1.5rem;\n    border: 2px solid var(--primary-color);\n    border-radius: 50%;\n    cursor: pointer;\n    user-select: none;\n}\n\n.task {\n    display: flex;\n    align-items: center;\n    border: 1px solid #cbd5e1;\n    height: 6rem;\n    padding: 1rem;\n    box-sizing: border-box;\n    background-color: white;\n    border-radius: 0.5rem;\n    margin-bottom: 3px;\n    transition: all 0.3s ease;\n}\n\n.high-priority-task {\n    background-color: #f8717138;\n    border: 1px solid var(--accent-color);\n}\n\n.task-title {\n    overflow: auto;\n    padding: 0 0.2rem;\n    color: var(--primary-color);\n    font-size: 1.5rem;\n}\n\n.task span {\n    color: #0d9488;\n}\n\n.task-description {\n    flex-grow: 1;\n    margin: 0 0.5rem;\n    color: #64748b;\n    overflow: auto;\n}\n\n.task-date {\n    padding: 0 0.5rem;\n    border-radius: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n    flex-shrink: 0;\n}\n\n.task i {\n    color: var(--primary-color);\n    font-size: 1.7rem;\n    cursor: pointer;\n}\n\n.edit-task-button {\n    margin: 0 0.5rem;\n}\n.edit-task-button:hover {\n    color: #fb923c;\n}\n\n.delete-task-button:hover {\n    color: var(--accent-color);\n}\n\n.completed {\n    background-color: #dcfce7;\n}\n\n.completed .checkmark {\n    border: 2px solid #22c55e;\n    color: var(--secondary-color);\n    background-color: #22c55e;\n}\n\n.completed .task-title {\n    text-decoration: line-through;\n    text-decoration-thickness: 2px;\n    color: #808080;\n}\n\n.completed span {\n    color: #808080;\n}\n\n.completed .task-description,\n.completed i {\n    color: #808080b0;\n}\n\n.completed .task-date {\n    background-color: #808080b0;\n}\n\n.edit-form {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin: 0 0.5rem;\n}\n\n.edit-form > input {\n    padding: 0 0.5rem;\n    height: 2rem;\n    font-size: 1.5rem;\n    border-radius: 0.5rem;\n    border: none;\n    box-shadow: 0 0 2px var(--primary-color);\n    outline: none;\n    min-width: 10rem;\n}\n\n.edit-form > label {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n}\n\n.edit-form button {\n    border: none;\n    background-color: inherit;\n}\n\n.edit-form i {\n    color: #22c55e;\n}\n\n.edit-form i:hover {\n    filter: brightness(0.9);\n}\n\n.edit-description-input {\n    flex-grow: 1;\n}\n\n.edit-priority-input {\n    width: 1.5rem;\n    height: 1.5rem;\n    flex-shrink: 0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Pacifico&family=Solway&display=swap');\n\n:root {\n    font-size: 12px;\n\n    --primary-color: #334155;\n    --secondary-color: #f1f5f9;\n    --accent-color: #f87171;\n    --valid-color: #4ade80;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    font-family: 'Solway', sans-serif;\n}\n\nbody {\n    display: grid;\n    grid-template: auto 1fr / 270px 1fr;\n    min-height: 100vh;\n    background-color: var(--secondary-color);\n}\n\nbutton {\n    cursor: pointer;\n}\n\nli, i, button {\n    transition: all 0.1s ease;\n}\n\nheader {\n    grid-column: 1 / 3;\n    font-size: 2rem;\n    text-align: center;\n    border-bottom: 3px solid;\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n}\n\nheader h1 {\n    font-family: 'Pacifico', sans-serif;\n}\n\nnav {\n    padding: 2rem;\n    font-size: 1.5rem;\n    background-color: var(--primary-color);\n    border-right: 3px solid var(--secondary-color);\n    color: var(--secondary-color);\n}\n\nul {\n    list-style: none;\n}\n\nli {\n    display: flex;\n    gap: 1rem;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    user-select: none;\n}\nli:hover {\n    background-color: #f1f5f960;\n}\n\nli + li {\n    margin: 1rem 0;\n}\n\nli svg {\n    height: 1.5rem;\n    fill: var(--secondary-color);\n}\n\n.projects-nav li {\n    justify-content: space-between;\n}\n\n.project-info-div {\n    display: flex;\n    gap: 1rem;\n}\n\n.project-info-div > div {\n    max-width: 11rem;\n    overflow: hidden;\n}\n\n.delete-project {\n    all: unset;\n    color: var(--accent-color);\n}\n.delete-project:hover {\n    text-shadow: 0 0 2px;\n}\n\n.selected-project,\n.selected-project:hover,\n.new-project-button:hover {\n    background-color: var(--secondary-color);\n    color: var(--primary-color);\n}\n\nnav h3 {\n    margin: 4rem 0 1rem 0;\n}\n\n.new-project-button {\n    display: block;\n    width: 100%;\n    text-align: center;\n    border: 1px solid;\n    padding: 1rem;\n    box-sizing: border-box;\n    border-radius: 0.5rem;\n    margin-top: 2rem;\n    background-color: inherit;\n    font-size: inherit;\n    color: var(--secondary-color);\n}\n\n.project-form {\n    display: none;\n    margin-top: 2rem;\n}\n\n.project-form > input {\n    box-sizing: border-box;\n    width: 100%;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n    border: none;\n    font-size: inherit;\n    outline: none;\n}\n\n.project-form > div {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 0.5rem;\n}\n\n.project-form button {\n    width: 8rem;\n    height: 3rem;\n    font-size: inherit;\n    border-radius: 0.5rem;\n    border: none;\n    background-color: var(--valid-color);\n}\n.project-form button:last-child {\n    background-color: var(--accent-color);\n}\n.project-form button:hover {\n    filter: brightness(0.9);\n}\n\nmain {\n    font-size: 1.5rem;\n    width: 85%;\n    margin: 0 auto;\n    position: relative;\n}\n\nmain h2 {\n    height: 6rem;\n    font-size: 3rem;\n    background-color: #94a3b8;\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    box-sizing: border-box;\n    border-radius: 0.5rem;\n}\n\n.new-task-button {\n    border: 1px solid var(--primary-color);\n    padding: 1rem;\n    border-radius: 0.5rem;\n    margin-top: 3px;\n    background-color: #e2e8f0;\n    font-size: 1.5rem;\n    color: var(--primary-color);\n}\n.new-task-button:hover {\n    background-color: #cbd5e1;\n}\n\n.task-form {\n    display: flex;\n    flex-direction: column;\n    border-radius: 0.5rem;\n    padding: 2rem;\n    width: 27rem;\n    font-size: 1.5rem;\n    background-color: #e2e8f0;\n    box-shadow: 2px 2px 3px var(--primary-color)4f;\n    position: absolute;\n    top: 126px;\n    transform-origin: top left;\n    transform: scale(0);\n    opacity: 0;\n    transition: all 0.3s ease;\n}\n\n.task-form input {\n    font-size: inherit;\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    border: none;\n    outline: none;\n    margin-bottom: 1rem;\n}\n\n.priority-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 1rem;\n    gap: 1rem;\n}\n\n.priority-container input {\n    height: 1.5rem;\n    width: 1.5rem;\n    margin-bottom: unset;\n}\n\n.task-form-buttons {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.task-form-buttons button {\n    width: 9rem;\n    height: 3rem;\n    font-size: inherit;\n    border-radius: 0.5rem;\n    border: none;\n    background-color: var(--valid-color);\n}\n.task-form-buttons button:last-child {\n    background-color: var(--accent-color);\n}\n.task-form-buttons button:hover {\n    filter: brightness(0.9);\n}\n\n.tasks {\n    margin-top: 2rem;\n}\n\n.checkmark {\n    width: 1.5rem;\n    height: 1.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin-right: 0.5rem;\n    font-size: 1.5rem;\n    border: 2px solid var(--primary-color);\n    border-radius: 50%;\n    cursor: pointer;\n    user-select: none;\n}\n\n.task {\n    display: flex;\n    align-items: center;\n    border: 1px solid #cbd5e1;\n    height: 6rem;\n    padding: 1rem;\n    box-sizing: border-box;\n    background-color: white;\n    border-radius: 0.5rem;\n    margin-bottom: 3px;\n    transition: all 0.3s ease;\n}\n\n.high-priority-task {\n    background-color: #f8717138;\n    border: 1px solid var(--accent-color);\n}\n\n.task-title {\n    overflow: auto;\n    padding: 0 0.2rem;\n    color: var(--primary-color);\n    font-size: 1.5rem;\n}\n\n.task span {\n    color: #0d9488;\n}\n\n.task-description {\n    flex-grow: 1;\n    margin: 0 0.5rem;\n    color: #64748b;\n    overflow: auto;\n}\n\n.task-date {\n    padding: 0 0.5rem;\n    border-radius: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n    flex-shrink: 0;\n}\n\n.task i {\n    color: var(--primary-color);\n    font-size: 1.7rem;\n    cursor: pointer;\n}\n\n.edit-task-button {\n    margin: 0 0.5rem;\n}\n.edit-task-button:hover {\n    color: #fb923c;\n}\n\n.delete-task-button:hover {\n    color: var(--accent-color);\n}\n\n.completed {\n    background-color: #dcfce7;\n}\n\n.completed .checkmark {\n    border: 2px solid #22c55e;\n    color: var(--secondary-color);\n    background-color: #22c55e;\n}\n\n.completed .task-title {\n    text-decoration: line-through;\n    text-decoration-thickness: 2px;\n    color: #808080;\n}\n\n.completed span {\n    color: #808080;\n}\n\n.completed .task-description,\n.completed i {\n    color: #808080b0;\n}\n\n.completed .task-date {\n    background-color: #808080b0;\n}\n\n.edit-form {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin: 0 0.5rem;\n}\n\n.edit-form > input {\n    padding: 0 0.5rem;\n    height: 2rem;\n    font-size: 1.5rem;\n    border-radius: 0.5rem;\n    border: none;\n    box-shadow: 0 0 2px var(--primary-color);\n    outline: none;\n    min-width: 10rem;\n}\n\n.edit-form > label {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n}\n\n.edit-form button {\n    border: none;\n    background-color: inherit;\n}\n\n.edit-form i {\n    color: #22c55e;\n}\n\n.edit-form i:hover {\n    filter: brightness(0.9);\n}\n\n.edit-description-input {\n    flex-grow: 1;\n}\n\n.edit-priority-input {\n    width: 1.5rem;\n    height: 1.5rem;\n    flex-shrink: 0;\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(a[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var A=n[c],s=r.base?A[0]+r.base:A[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var u=t(l),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=o(m,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:p,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var A=r(n,o),s=0;s<i.length;s++){var d=t(i[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),u=t.n(l),m=t(426),p={};function f(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function C(n){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},C(n)}function B(n){f(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===C(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function g(n){f(1,arguments);var e=B(n);return e.setHours(0,0,0,0),e}function b(n,e){f(2,arguments);var t=g(n),r=g(e);return t.getTime()===r.getTime()}function I(n){return f(1,arguments),b(n,Date.now())}p.styleTagTransform=u(),p.setAttributes=A(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=d(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals,Math.pow(10,8);var h=36e5;function y(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function v(n,e){var t;f(1,arguments);var r=y(null!==(t=null==e?void 0:e.additionalDigits)&&void 0!==t?t:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof n&&"[object String]"!==Object.prototype.toString.call(n))return new Date(NaN);var o,i=E(n);if(i.date){var a=S(i.date,r);o=P(a.restDateString,a.year)}if(!o||isNaN(o.getTime()))return new Date(NaN);var c,A=o.getTime(),s=0;if(i.time&&(s=q(i.time),isNaN(s)))return new Date(NaN);if(!i.timezone){var d=new Date(A+s),l=new Date(0);return l.setFullYear(d.getUTCFullYear(),d.getUTCMonth(),d.getUTCDate()),l.setHours(d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds(),d.getUTCMilliseconds()),l}return c=L(i.timezone),isNaN(c)?new Date(NaN):new Date(A+s+c)}var k={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},j=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,x=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,w=/^([+-])(\d{2})(?::?(\d{2}))?$/;function E(n){var e,t={},r=n.split(k.dateTimeDelimiter);if(r.length>2)return t;if(/:/.test(r[0])?e=r[0]:(t.date=r[0],e=r[1],k.timeZoneDelimiter.test(t.date)&&(t.date=n.split(k.timeZoneDelimiter)[0],e=n.substr(t.date.length,n.length))),e){var o=k.timezone.exec(e);o?(t.time=e.replace(o[1],""),t.timezone=o[1]):t.time=e}return t}function S(n,e){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),r=n.match(t);if(!r)return{year:NaN,restDateString:""};var o=r[1]?parseInt(r[1]):null,i=r[2]?parseInt(r[2]):null;return{year:null===i?o:100*i,restDateString:n.slice((r[1]||r[2]).length)}}function P(n,e){if(null===e)return new Date(NaN);var t=n.match(j);if(!t)return new Date(NaN);var r=!!t[4],o=T(t[1]),i=T(t[2])-1,a=T(t[3]),c=T(t[4]),A=T(t[5])-1;if(r)return function(n,e,t){return e>=1&&e<=53&&t>=0&&t<=6}(0,c,A)?function(n,e,t){var r=new Date(0);r.setUTCFullYear(n,0,4);var o=7*(e-1)+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}(e,c,A):new Date(NaN);var s=new Date(0);return function(n,e,t){return e>=0&&e<=11&&t>=1&&t<=(N[e]||(D(n)?29:28))}(e,i,a)&&function(n,e){return e>=1&&e<=(D(n)?366:365)}(e,o)?(s.setUTCFullYear(e,i,Math.max(o,a)),s):new Date(NaN)}function T(n){return n?parseInt(n):1}function q(n){var e=n.match(x);if(!e)return NaN;var t=z(e[1]),r=z(e[2]),o=z(e[3]);return function(n,e,t){return 24===n?0===e&&0===t:t>=0&&t<60&&e>=0&&e<60&&n>=0&&n<25}(t,r,o)?t*h+6e4*r+1e3*o:NaN}function z(n){return n&&parseFloat(n.replace(",","."))||0}function L(n){if("Z"===n)return 0;var e=n.match(w);if(!e)return 0;var t="+"===e[1]?-1:1,r=parseInt(e[2]),o=e[3]&&parseInt(e[3])||0;return function(n,e){return e>=0&&e<=59}(0,o)?t*(r*h+6e4*o):NaN}var N=[31,null,31,30,31,30,31,31,30,31,30,31];function D(n){return n%400==0||n%4==0&&n%100!=0}var F={};function Y(){return F}function U(n,e){var t,r,o,i,a,c,A,s;f(1,arguments);var d=Y(),l=y(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.weekStartsOn)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(c=a.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==o?o:d.weekStartsOn)&&void 0!==r?r:null===(A=d.locale)||void 0===A||null===(s=A.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=B(n),m=u.getDay(),p=(m<l?7:0)+m-l;return u.setDate(u.getDate()-p),u.setHours(0,0,0,0),u}function Z(n,e,t){f(2,arguments);var r=U(n,t),o=U(e,t);return r.getTime()===o.getTime()}function O(n,e){return f(1,arguments),Z(n,Date.now(),e)}class M{constructor(n){this.title=n,this.tasks=[],this.priorityTasks=[]}addTask(n){n.priority?this.priorityTasks.push(n):this.tasks.push(n)}deleteTask(n){if(n.priority){const e=this.priorityTasks.indexOf(n);this.priorityTasks.splice(e,1)}else{const e=this.tasks.indexOf(n);this.tasks.splice(e,1)}}}const W=function(){const n=[];let e;return{addProject:e=>{n.push(e)},getProjects:()=>n,deleteProject:e=>{const t=n.indexOf(e);n.splice(t,1)},getCurrentProject:()=>e,setCurrentProject:n=>{e=n},getHomeProject:()=>n[0]}}();function H(){localStorage.setItem("projects",JSON.stringify(W.getProjects()))}function R(){const n=W.getCurrentProject();W.getProjects().forEach((e=>{e.tasks.forEach((e=>{I(v(e.date))&&n.addTask(e)})),e.priorityTasks.forEach((e=>{I(v(e.date))&&n.addTask(e)}))}))}function $(){const n=W.getCurrentProject();W.getProjects().forEach((e=>{e.tasks.forEach((e=>{O(v(e.date))&&n.addTask(e)})),e.priorityTasks.forEach((e=>{O(v(e.date))&&n.addTask(e)}))}))}const X={getTasksForProject:function(){if(!W.getCurrentProject().title){const n=document.querySelector(".selected-project");W.setCurrentProject(new M)," Today"===n.textContent?R():" This Week"===n.textContent&&$()}},deleteProjectTask:function(n){W.getProjects().forEach((e=>{e.tasks.includes(n)&&e.deleteTask(n),e.priorityTasks.includes(n)&&e.deleteTask(n)}))},createProject:function(){const n=document.querySelector("#project-name").value,e=new M(n);return W.addProject(e),H(),e},getTodayProjects:R,getWeekProjects:$};class V{constructor(n,e,t,r){this.title=n,this.description=e,this.date=t,this.priority=r,this.isCompleted=!1}}function J(){const n=document.querySelector("#title").value,e=document.querySelector("#description").value,t=document.querySelector("#date").value,r=document.querySelector("#priority").checked;return new V(n,e,t,r)}function G(n,e){n.addTask(e)}function _(n,e){const t=e.querySelector(".edit-description-input"),r=e.querySelector(".edit-date-input");n.description=t.value,n.date=r.value}function K(n,e){const t=Q(n),r=e.querySelector(".edit-priority-input");n.priority!==r.checked&&(X.deleteProjectTask(n),n.priority=r.checked,G(t,n))}function Q(n){let e;const t=W.getProjects();for(let r=0;r<t.length;r++)(t[r].tasks.includes(n)||t[r].priorityTasks.includes(n))&&(e=r);return t[e]}const nn=function(n){G(n,J()),H()},en=function(n){let e;return e=n?W.getCurrentProject().priorityTasks:W.getCurrentProject().tasks,e},tn=function(n){n.isCompleted?n.isCompleted=!1:n.isCompleted=!0},rn=function(n){W.getCurrentProject().deleteTask(n),X.deleteProjectTask(n),H()},on=function(n,e){_(n,e),K(n,e),X.getTasksForProject(),H()},an=function(n){const e=document.querySelector(".new-task-button"),t=document.querySelector(".task-form"),r=document.querySelector(".new-project-button"),o=document.querySelector(".project-form");n.includes("newTaskBtn")&&(e.style.display="none"),n.includes("taskForm")&&(t.style.opacity="0",t.style.transform="scale(0)"),n.includes("newProjectBtn")&&(r.style.display="none"),n.includes("projectForm")&&(o.style.display="none")},cn=function(n){const e=document.querySelector(".new-task-button"),t=document.querySelector(".task-form"),r=document.querySelector(".new-project-button"),o=document.querySelector(".project-form");n.includes("newTaskBtn")&&(e.style.display="inline"),n.includes("taskForm")&&(t.style.opacity="1",t.style.transform="scale(1)"),n.includes("newProjectBtn")&&(r.style.display="block"),n.includes("projectForm")&&(o.style.display="block")};function An(n){const e=document.querySelector(".tasks");n&&(e.textContent=""),en(n).forEach((t=>{e.appendChild(function(n,e){const t=function(n){const e=document.createElement("div");return e.classList.add("task"),n&&e.classList.add("high-priority-task"),e}(e),r=function(n,e){const t=document.createElement("div");return t.classList.add("checkmark"),t.addEventListener("click",(()=>function(n,e,t){(function(n,e){n.textContent?(n.textContent="",e.classList.remove("completed")):(n.textContent="✔",e.classList.add("completed"))})(n,t),tn(e),cn(["newProjectBtn"]),an(["taskForm","projectForm"])}(t,e,n))),function(n,e,t){e.isCompleted&&(n.textContent="✔",t.classList.add("completed"))}(t,e,n),t}(t,n),o=function(n){const e=document.createElement("h3");return e.textContent=n.title,e.classList.add("task-title"),e}(n),i=function(n){const e=document.createElement("p");return e.textContent=n.description,e.classList.add("task-description"),e}(n),a=function(n){const e=document.createElement("p");return e.textContent=n.date,e.classList.add("task-date"),e}(n),c=function(n,e){const t=document.createElement("i");return t.classList.add("fa-solid"),t.classList.add("fa-pen-to-square"),t.classList.add("edit-task-button"),t.addEventListener("click",(()=>function(n,e,t){(function(n,e,t){const r=function(n){const e=document.createElement("form");return e.classList.add("edit-form"),e.addEventListener("submit",(t=>{t.preventDefault(),function(n,e){on(n,e),An(!0)}(n,e)})),e}(n),o=function(n){const e=document.createElement("input");return e.classList.add("edit-description-input"),e.setAttribute("placeholder","Description"),e.value=sn(n).description.textContent,e}(t),i=function(n){const e=document.createElement("input");return e.type="date",e.classList.add("edit-date-input"),e.value=sn(n).date.textContent,e}(t),a=function(){const n=document.createElement("label");return n.textContent="Mark High Priority",n}(),c=function(n){const e=document.createElement("input");return e.classList.add("edit-priority-input"),e.type="checkbox",e.checked=n.priority,e}(n),A=function(){const n=document.createElement("button"),e=document.createElement("i");return e.classList.add("fa-solid"),e.classList.add("fa-circle-check"),n.appendChild(e),n}();a.appendChild(c),r.appendChild(o),r.appendChild(a),r.appendChild(i),r.appendChild(A),e.insertBefore(r,sn(t).deleteBtn)})(n,e,t),function(n){sn(n).description.remove(),sn(n).date.remove(),n.remove()}(t),an(["taskForm","projectForm"]),cn(["newProjectBtn"])}(n,e,t))),t}(n,t),A=function(n){const e=document.createElement("i");return e.classList.add("fa-regular"),e.classList.add("fa-trash-can"),e.classList.add("delete-task-button"),e.addEventListener("click",(()=>function(n){rn(n),An(!0),cn(["newProjectBtn"]),an(["taskForm","projectForm"])}(n))),e}(n);return t.appendChild(r),t.appendChild(o),o.appendChild(function(n){const e=document.createElement("span");return W.getCurrentProject().title||W.getProjects().forEach((t=>{t.tasks.includes(n)&&(e.textContent=` (${t.title})`),t.priorityTasks.includes(n)&&(e.textContent=` (${t.title})`)})),e}(n)),t.appendChild(i),t.appendChild(a),t.appendChild(c),t.appendChild(A),t}(t,n))})),n&&An(!1)}function sn(n){const e=n.parentElement;return{title:e.querySelector(".task-title"),description:e.querySelector(".task-description"),date:e.querySelector(".task-date"),deleteBtn:e.querySelector(".delete-task-button")}}function dn(n){document.querySelector(".projects-nav").appendChild(ln(n))}function ln(n){const e=function(n){const e=document.createElement("li");return e.addEventListener("click",(()=>mn(e,n))),e}(n),t=function(){const n=document.createElement("div");return n.classList.add("project-info-div"),n}(),r=function(){const n=document.createElement("i");return n.classList.add("fa-solid"),n.classList.add("fa-list-check"),n}(),o=function(n){const e=document.createElement("div");return e.textContent=n.title,e}(n),i=un(e,n);return e.appendChild(t),t.appendChild(r),t.appendChild(o),e.appendChild(i),e}function un(n,e){const t=document.createElement("button");t.classList.add("delete-project"),t.addEventListener("click",(t=>{t.stopPropagation(),pn(n,e)}));const r=document.createElement("i");return r.classList.add("fa-regular"),r.classList.add("fa-trash-can"),t.appendChild(r),t}function mn(n,e){fn(n),W.setCurrentProject(e),An(!0),cn(["newTaskBtn","newProjectBtn"]),an(["taskForm","projectForm"]),Bn()}function pn(n,e){W.deleteProject(e),n.remove(),Cn(e),H(),cn(["newProjectBtn"]),an(["taskForm","projectForm"])}function fn(n){document.querySelectorAll("li").forEach((n=>n.classList.remove("selected-project"))),n.classList.add("selected-project")}function Cn(n){W.getCurrentProject()==n&&(fn(document.querySelector(".home-li")),W.setCurrentProject(W.getHomeProject()),Bn(),An(!0))}function Bn(n){const e=W.getCurrentProject(),t=document.querySelector(".project-name");e.title?t.textContent=e.title:t.textContent=n}const gn={appendProject:dn,createProjectElement:ln,createDeleteProjectButton:un,projectClick:mn,deleteProject:pn,setSelectedProject:fn,ifSelectedProjectDeleted:Cn,displayProjectName:Bn,appendProjectsFromStorage:function(){const n=W.getProjects();for(let e=1;e<n.length;e+=1)dn(n[e])}},bn=document.querySelector(".home-li");bn.addEventListener("click",(function(){gn.setSelectedProject(bn),W.setCurrentProject(W.getHomeProject()),An(!0),cn(["newTaskBtn","newProjectBtn"]),an(["taskForm","projectForm"]),gn.displayProjectName()}));const In=document.querySelector(".today-li");In.addEventListener("click",(function(){gn.setSelectedProject(In),W.setCurrentProject(new M),X.getTodayProjects(),An(!0),cn(["newProjectBtn"]),an(["newTaskBtn","taskForm","projectForm"]),gn.displayProjectName("Today")}));const hn=document.querySelector(".week-li");hn.addEventListener("click",(function(){gn.setSelectedProject(hn),W.setCurrentProject(new M),X.getWeekProjects(),An(!0),cn(["newProjectBtn"]),an(["newTaskBtn","taskForm","projectForm"]),gn.displayProjectName("This Week")}));document.querySelector(".new-task-button").addEventListener("click",(function(){yn.reset(),vn.reset(),cn(["taskForm","newProjectBtn"]),an(["projectForm"])}));const yn=document.querySelector(".task-form");yn.addEventListener("submit",(function(n){n.preventDefault(),nn(W.getCurrentProject()),An(!0),an(["taskForm"])}));document.querySelector(".cancel-form-button").addEventListener("click",(function(){an(["taskForm"])}));document.querySelector(".new-project-button").addEventListener("click",(function(){yn.reset(),vn.reset(),cn(["projectForm"]),an(["newProjectBtn","taskForm"])}));const vn=document.querySelector(".project-form");vn.addEventListener("submit",(function(n){n.preventDefault(),gn.appendProject(X.createProject()),cn(["newProjectBtn"]),an(["projectForm"])}));document.querySelector(".cancel-form-project").addEventListener("click",(function(){cn(["newProjectBtn"]),an(["projectForm"])})),localStorage.length?JSON.parse(localStorage.getItem("projects")).forEach((n=>{!function(n){const e=new M(n.title);e.tasks=n.tasks,e.priorityTasks=n.priorityTasks,W.addProject(e)}(n)})):function(){const n=new M("Home");W.addProject(n)}(),W.setCurrentProject(W.getHomeProject()),gn.appendProjectsFromStorage(),An(!0)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,